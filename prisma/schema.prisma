generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  first_name      String?
  last_name       String?
  created_at      DateTime         @default(now())
  modified_at     DateTime         @updatedAt
  user_addresses  User_Address[]
  user_payments   User_Payment[]
  orders          Order[]
}

model User_Address {
  id             Int      @id @default(autoincrement())
  address_line1  String    
  address_line2  String?
  city           String
  postal_code    Int
  country        String
  telephone      String?
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
}

model User_Payment {
  id            Int      @id @default(autoincrement())   
  payment_type  String
  provider      String
  account_id    String?
  userId        Int      
  user          User     @relation(fields: [userId], references: [id])
}


model Product {
  id                  Int                @id @default(autoincrement())   
  name                String
  description         String   
  stock               Decimal
  price               Decimal
  created_at          DateTime          @default(now())
  modified_at         DateTime          @updatedAt
  productCategoryId   Int
  product_category    Product_Category  @relation(fields: [productCategoryId], references: [id])
  order_items         Order_Item[]
}

model Product_Category {
  id                Int      @id @default(autoincrement())   
  name              String
  description       String?   
  created_at        DateTime @default(now())
  modified_at       DateTime @updatedAt
  products          Product[]
}

model Order {
  id                Int              @id @default(autoincrement())
  total             Decimal
  userId            Int
  status            String
  user              User             @relation(fields: [userId], references: [id])
  created_at        DateTime         @default(now())
  modified_at       DateTime         @updatedAt
  order_items       Order_Item[]
  payment_details   Payment_Details[]
}

model Payment_Details {
  id            Int      @id @default(autoincrement())
  payment_type  String   
  provider      String   
  status        String   
  transactionId String?  
  orderId       Int      
  order         Order    @relation(fields: [orderId], references: [id])
  created_at    DateTime @default(now())
  modified_at   DateTime @updatedAt
}

model Order_Item {
  id                Int      @id @default(autoincrement())   
  orderId           Int
  productId         Int
  unit_price        Decimal
  quantity          Decimal
  order             Order    @relation(fields: [orderId], references: [id])
  product           Product  @relation(fields: [productId], references: [id])
}

